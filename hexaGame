#Public module
import random
import os
from turtle import tracer
from unicodedata import decimal
import time
#Jerome module
import deco
# import main
import leaderboard


def hexa():
    reset_hex = True
    deco.message('Welcome to the hexadecimal Game!')
    print("\nWhat Gamemode do you want to play?\n")
    print("1. Hex to Binary")
    print("2. Binary to Hex")   
    print("3. Hex to Decimal")
    print("4. Decimal to Hex")
    print("\n5. Exit to Main Menu")

    try: 
        gamemode = int(input('Choose an option: '))
    except ValueError:
        print('\nPlease enter a number between 1 and 4!')
        input("Press Enter to continue...")
        os.system('cls' if os.name == 'nt' else 'clear')

    if gamemode ==1:
        reset = False
        os.system('cls' if os.name == 'nt' else 'clear')
        hexToBinary()
    elif gamemode ==2:
        reset = False
        os.system('cls' if os.name == 'nt' else 'clear')
        binaryToHex()
    elif gamemode ==3:
        reset = False
        os.system('cls' if os.name == 'nt' else 'clear')
        hexToDecimal()
    elif gamemode ==4:
        reset = False
        os.system('cls' if os.name == 'nt' else 'clear')
        decimalToHex()
    elif gamemode ==5:
        reset = False
        os.system('cls' if os.name == 'nt' else 'clear')
        main.start()
    else:
        print('Invalid option!')
        input("Press Enter to continue...")
        reset = True
        os.system('cls' if os.name == 'nt' else 'clear')
        hexa()
    
def binToHex(n):
    num = int(n, 2)
    hex_num = format(num, 'x')
    return(hex_num)

def hexToBin(n):
    num = int(n, 16)
    bin_num = format(num, 'b')
    return(bin_num)

def hexToBinary():
    reset_hex = True
    score = 0
    deco.message('Welcome to the Hexadecimal to Binary Converter!')
    print("\nChoose difficulty:\n")
    print("The higher the number, the harder the game.")
    print("But you will also get more points for each correct answer!\n")

    try:
        diff = int(input("Enter a number (16-256): \n\n"))
    except ValueError:
        print('\n\nPlease enter a number between 16 and 256!\n\n')
        input("Press Enter to continue...")
        os.system('cls' if os.name == 'nt' else 'clear')
        hexToBinary()
    if diff < 16 or diff > 256:
        print("Please enter a number between 16 and 256!")
        input("Press Enter to continue...")
        os.system('cls' if os.name == 'nt' else 'clear')
        hexToBinary()
    os.system('cls' if os.name == 'nt' else 'clear')

    while reset_hex:
        randomInt = random.randint(0,diff)
        randomHexa = hex(randomInt)[2:]
        res = hexToBin(randomHexa)
        print(f'Please convert the following hexadecimal number to a binary:\n\n' + randomHexa + '\n')
        try:
            inp = str(input("My Answer:\n"))
        except ValueError:
            print('\nPlease enter a number!')
            input("Press Enter to continue...")
            os.system('cls' if os.name == 'nt' else 'clear')
            continue

        if inp == res:
            print('\nCorrect answer!')
            score += 1
            print(f'\nCurrent Score: {score}\n')
            deco.message2()
            time.sleep(1)
            continue

        else:
            print('\nIncorrect answer!')
            print(f'Correct answer: {res}')
            print(f'Highscore: {score}\n')
            reset_hex = False

            if score > 0:
                saveScore = str(input("Do you want to save your score? (y/n)"))
                if saveScore.__eq__('y'):
                    name = input("Please enter your name: ")
                    leaderboard.updateLeaderboard(name, 'H->B', score)
                    print('\nYour score has been saved!')
                    input("Press Enter to continue...")
                    os.system('cls' if os.name == 'nt' else 'clear')
                    hexToBinary()

            reset = str(input('Do you want to play again? <y/n>: '))
            if reset.__eq__('y'):
                reset_hex= True
                score = 0
                os.system('cls' if os.name == 'nt' else 'clear')
                continue
            elif reset.__eq__(''):
                reset_hex = True
                score = 0
                os.system('cls' if os.name == 'nt' else 'clear')
                hexToBinary()
            else:
                reset = str(input('Do you want to exit to the main menu or change the difficulty level? <m/d>: '))
                if reset.__eq__('m'):
                    reset_hex = False
                    score = 0
                    os.system('cls' if os.name == 'nt' else 'clear')
                    main.start()
                elif reset.__eq__('d'):
                    reset_hex = False
                    score = 0
                    os.system('cls' if os.name == 'nt' else 'clear')
                    hexToBinary()
                else:
                    print('Invalid option!')
                    input("Press Enter to continue...")
                    reset_dec = False
                    score = 0
                    os.system('cls' if os.name == 'nt' else 'clear')
                    hexToBinary()
                    
#mehr punkte durch for loop der variable erhöht graduelle und iteration ist eingabe von user
def binToHexadecimal():
    reset_hex = True
    score = 0
    os.system("clear")
    deco.message('Welcome to the Binary to Hexadecimal Converter!')
    print("\nChoose difficulty:\n")
    print("The higher the number, the harder the game.")
    print("But you will also get more points for each correct answer!\n")
    
    try:
        diff = int(input("Enter a number (16-256): \n\n"))
    except ValueError:
        print('\n\nPlease enter a number between 16 and 256!\n\n')
        input("Press Enter to continue...")
        os.system('cls' if os.name == 'nt' else 'clear')
        hexToBinary()
    if diff < 16 or diff > 256:
        print("Please enter a number between 16 and 256!")
        input("Press Enter to continue...")
        os.system('cls' if os.name == 'nt' else 'clear')
        hexToBinary()
    os.system('cls' if os.name == 'nt' else 'clear')

    while reset_hex:
        def binToHex(n): #braucht bin string als input und gibt hex string zurück
            # convert binary to int
            num = int(n, 2)
            # convert int to hexadecimal
            hex_num = hex(num)
            return(hex_num)

        randomInt = int(random.randint(0,diff)) #create random number, diff is the difficulty set by the user
        randomBin = bin(randomInt)[2:] #convert to binary
        randomHex = binToHex(randomBin)[2:] #convert to hexadecimal
        res = randomHex #save the random hexadecimal number

        print(f'Please convert the following Binary number to a Hexadecimal:\n\n' + randomBin + '\n')
        try:
            inp = str(input("My Answer:\n"))
        except ValueError:
            print('\nPlease enter a number!')
            input("Press Enter to continue...")
            os.system('cls' if os.name == 'nt' else 'clear')
            continue

        if inp == res:
            print('\nCorrect answer!')
            score += 1
            print(f'\nCurrent Score: {score}\n')
            deco.message2()
            time.sleep(1)
            continue

        else:
            print('\nIncorrect answer!')
            print(f'Correct answer: {res}')
            print(f'Highscore: {score}\n')
            reset_hex = False

            if score > 0:
                saveScore = str(input("Do you want to save your score? (y/n)"))
                if saveScore.__eq__('y'):
                    name = input("Please enter your name: ")
                    leaderboard.updateLeaderboard(name, 'H->B', score)
                    print('\nYour score has been saved!')
                    input("Press Enter to continue...")
                    os.system('cls' if os.name == 'nt' else 'clear')
            
            reset = str(input('Do you want to play again? <y/n>: '))
            if reset.__eq__('y'):
                reset_hex= True
                score = 0
                os.system('cls' if os.name == 'nt' else 'clear')
                continue
            elif reset.__eq__(''):
                reset_hex = True
                score = 0
                os.system('cls' if os.name == 'nt' else 'clear')
                continue
            else:
                reset = str(input('Do you want to exit to the main menu or change the difficulty level? <m/d>: '))
                if reset.__eq__('m'):
                    reset_hex = False
                    score = 0
                    os.system('cls' if os.name == 'nt' else 'clear')
                    main.start()
                elif reset.__eq__('d'):
                    reset_hex = False
                    score = 0
                    os.system('cls' if os.name == 'nt' else 'clear')
                    binToHexadecimal()
                else:
                    print('Invalid option!')
                    input("Press Enter to continue...")
                    reset_dec = False
                    score = 0
                    os.system('cls' if os.name == 'nt' else 'clear')
                    binToHexadecimal()
                    
binToHexadecimal()